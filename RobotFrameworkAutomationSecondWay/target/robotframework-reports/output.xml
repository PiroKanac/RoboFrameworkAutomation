<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generator="Robot 3.1.1 (Jython 2.7.0 on java1.8.0_191)" generated="20190201 14:33:16.382">
<suite source="C:\Users\vnikolic\eclipse-workspace\RobotFrameworkAutomationSecondWay\src\test\robotframework\acceptance" name="Acceptance" id="s1">
<suite source="C:\Users\vnikolic\eclipse-workspace\RobotFrameworkAutomationSecondWay\src\test\robotframework\acceptance\TC_001_LoginLogout.robot" name="TC 001 LoginLogout" id="s1-s1">
<test name="TC_001 Login Logout Functionality" id="s1-s1-t1">
<kw library="Selenium2Library" name="Open Browser">
<doc>Opens a new browser instance to given URL.&lt;br&gt;
 &lt;br&gt;
 Possible values for browser are as follows:
 &lt;table border="1" cellspacing="0" summary=""&gt;
 &lt;tr&gt;
 &lt;td&gt;firefox&lt;/td&gt;
 &lt;td&gt;FireFox&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;ff&lt;/td&gt;
 &lt;td&gt;FireFox&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;internetexplorer&lt;/td&gt;
 &lt;td&gt;Internet Explorer&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;ie&lt;/td&gt;
 &lt;td&gt;Internet Explorer&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;googlechrome&lt;/td&gt;
 &lt;td&gt;Google Chrome&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;gc&lt;/td&gt;
 &lt;td&gt;Google Chrome&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;chrome&lt;/td&gt;
 &lt;td&gt;Google Chrome&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;opera&lt;/td&gt;
 &lt;td&gt;Opera&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;phantomjs&lt;/td&gt;
 &lt;td&gt;PhantomJS&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;htmlunitwithjs&lt;/td&gt;
 &lt;td&gt;HTMLUnit with Javascipt support&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;safari&lt;/td&gt;
 &lt;td&gt;Safari&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;ipad&lt;/td&gt;
 &lt;td&gt;iPad&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;iphone&lt;/td&gt;
 &lt;td&gt;iPhone&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;android&lt;/td&gt;
 &lt;td&gt;Android&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;htmlunit&lt;/td&gt;
 &lt;td&gt;HTMLUnit&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
 &lt;br&gt;
 Returns the index of the newly created browser instance which can be used
 later to switch back to it. Index starts from 1 and is reset back to it
 when the `Close All Browsers` keyword is used.&lt;br&gt;
 &lt;br&gt;
 &lt;b&gt;DesiredCapabilities&lt;/b&gt;&lt;br&gt;
 The DesiredCapabilities can be specified in a simple key:value format or
 as a JSON object. With the JSON format more complex parameters, like the
 proxy, can be configured.&lt;br&gt;
 &lt;br&gt;
 Example of desiredCapabilities as simple string:&lt;br&gt;
 &lt;table border="1" cellspacing="0" summary=""&gt;
 &lt;tr&gt;
 &lt;td&gt;platform:Windows 8,browserName:firefox,version:25&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
 &lt;br&gt;
 Example of desiredCapabilities as JSON object:&lt;br&gt;
 &lt;table border="1" cellspacing="0" summary=""&gt;
 &lt;tr&gt;
 &lt;td&gt;
 {&lt;br&gt;
 &amp;emsp;"platform":"Windows 8",&lt;br&gt;
 &amp;emsp;"browserName":"firefox",&lt;br&gt;
 &amp;emsp;"version":"25",&lt;br&gt;
 &amp;emsp;"proxy":&lt;br&gt;
 &amp;emsp;{&lt;br&gt;
 &amp;emsp;&amp;emsp;"proxyType":"manual",&lt;br&gt;
 &amp;emsp;&amp;emsp;"httpProxy":"localhost:8118"&lt;br&gt;
 &amp;emsp;}&lt;br&gt;
 }&lt;br&gt;
 &lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
 &lt;br&gt;
 &lt;b&gt;BrowserOptions&lt;/b&gt;&lt;br&gt;
 The BrowserOptions can be specified as JSON object to set more complex
 browser specific parameters. At the moment only the following browsers
 with the listed options are implemented.&lt;br&gt;
 &lt;br&gt;
 Firefox:
 &lt;table border="1" cellspacing="0" summary=""&gt;
 &lt;tr&gt;
 &lt;td&gt;
 {&lt;br&gt;
 &amp;emsp;"preferences":&lt;br&gt;
 &amp;emsp;{&lt;br&gt;
 &amp;emsp;&amp;emsp;"extensions.firebug.currentVersion":"1.8.1",&lt;br&gt;
 &amp;emsp;&amp;emsp;"extensions.firebug.addonBarOpened":true,&lt;br&gt;
 &amp;emsp;&amp;emsp;"extensions.firebug.enableSites":true&lt;br&gt;
 &amp;emsp;}&lt;br&gt;
 &amp;emsp;"extensions":&lt;br&gt;
 &amp;emsp;[&lt;br&gt;
 &amp;emsp;&amp;emsp;"firebug-1.8.1.xpi",&lt;br&gt;
 &amp;emsp;&amp;emsp;"modify_headers-0.7.1.1-fx.xpi"&lt;br&gt;
 &amp;emsp;]&lt;br&gt;
 }&lt;br&gt;
 &lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
 &lt;br&gt;
 &lt;b&gt;Internet Explorer&lt;/b&gt;&lt;br&gt;
 Note, that you will encounter strange behavior, if you open multiple
 Internet Explorer browser instances. That is also why `Switch Browser`
 only works with one IE browser at most. For more information see: &lt;a
 href=
 "http://selenium-grid.seleniumhq.org/faq.html#i_get_some_strange_errors_when_i_run_multiple_internet_explorer_instances_on_the_same_machine"
 &gt;Strange errors with multiple IE instances&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Parameters:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;url&lt;/b&gt;&amp;nbsp;The URL to open in the newly created browser instance.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;browserName&lt;/b&gt;&amp;nbsp;Default=firefox. Optional name of the browser to start.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;alias&lt;/b&gt;&amp;nbsp;Default=NONE. Optional alias for the newly created browser
            instance. The alias can be used later for switching between
            browsers instances, just as returned index.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;remoteUrl&lt;/b&gt;&amp;nbsp;Default=False. Optional remote grid URL. When specified no
            local WebDriver instance is created, but a network connection
            to a Selenium 2 WebDriver Grid Hub at the given URL is opened.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;desiredCapabilities&lt;/b&gt;&amp;nbsp;Default=NONE. Optional desired capabilities of the newly
            created remote browser instances can be specified in a simple
            key1:val1,key2:val2 format or as a JSON object (see examples
            above). Used to communicate to the remote grid, which kind of
            browser, etc. should be used. For more information see: &lt;a
            href=
            "http://code.google.com/p/selenium/wiki/DesiredCapabilities"
            &gt;DesiredCapabilities&lt;/a&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;browserOptions&lt;/b&gt;&amp;nbsp;Default=NONE. Extended browser options as JSON structure.&lt;br&gt;&lt;br&gt;&lt;b&gt;Returns:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The index of the newly created browser instance.&lt;br&gt;&lt;br&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;`Close All Browsers`&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;`Close Browser`&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;`Switch Browser`&lt;br&gt;</doc>
<arguments>
<arg>${Application_URL}</arg>
<arg>${Browser_Name}</arg>
</arguments>
<msg level="INFO" timestamp="20190201 14:33:20.060">browserName: Chrome</msg>
<msg level="INFO" timestamp="20190201 14:33:20.067">Opening browser 'Chrome' to base url 'http://www.thetestingworld.com/testings'</msg>
<msg level="INFO" timestamp="20190201 14:33:28.749">Starting ChromeDriver 2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5) on port 17005
Only local connections are allowed.</msg>
<status endtime="20190201 14:33:28.752" starttime="20190201 14:33:20.014" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Maximize Browser Window">
<doc>Maximizes current browser window.&lt;br&gt;</doc>
<status endtime="20190201 14:33:29.908" starttime="20190201 14:33:28.759" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Go To">
<doc>Navigates the active browser instance to the provided URL.&lt;br&gt;&lt;br&gt;&lt;b&gt;Parameters:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;url&lt;/b&gt;&amp;nbsp;The URL to open.&lt;br&gt;</doc>
<arguments>
<arg>https://www.google.com</arg>
</arguments>
<msg level="INFO" timestamp="20190201 14:33:29.921">Opening url 'https://www.google.com'</msg>
<status endtime="20190201 14:33:31.475" starttime="20190201 14:33:29.912" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Go Back">
<doc>Simulates the user clicking the "back" button on their browser.&lt;br&gt;</doc>
<status endtime="20190201 14:33:32.729" starttime="20190201 14:33:31.479" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Get Location">
<doc>Returns the current location.&lt;br&gt;&lt;b&gt;Returns:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The current location.&lt;br&gt;&lt;br&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;`Log Location`&lt;br&gt;</doc>
<assign>
<var>${Current_Location}</var>
</assign>
<msg level="INFO" timestamp="20190201 14:33:33.299">${Current_Location} = http://www.thetestingworld.com/testings/</msg>
<status endtime="20190201 14:33:33.302" starttime="20190201 14:33:32.738" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${Current_Location}</arg>
</arguments>
<status endtime="20190201 14:33:33.321" starttime="20190201 14:33:33.306" status="PASS"></status>
</kw>
<status critical="yes" endtime="20190201 14:33:33.328" starttime="20190201 14:33:19.974" status="PASS"></status>
</test>
<status endtime="20190201 14:33:33.380" starttime="20190201 14:33:17.289" status="PASS"></status>
</suite>
<suite source="C:\Users\vnikolic\eclipse-workspace\RobotFrameworkAutomationSecondWay\src\test\robotframework\acceptance\TC_002_Signin.robot" name="TC 002 Signin" id="s1-s2">
<test name="TC_001 Login Logout Functionality" id="s1-s2-t1">
<kw library="Selenium2Library" name="Open Browser">
<doc>Opens a new browser instance to given URL.&lt;br&gt;
 &lt;br&gt;
 Possible values for browser are as follows:
 &lt;table border="1" cellspacing="0" summary=""&gt;
 &lt;tr&gt;
 &lt;td&gt;firefox&lt;/td&gt;
 &lt;td&gt;FireFox&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;ff&lt;/td&gt;
 &lt;td&gt;FireFox&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;internetexplorer&lt;/td&gt;
 &lt;td&gt;Internet Explorer&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;ie&lt;/td&gt;
 &lt;td&gt;Internet Explorer&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;googlechrome&lt;/td&gt;
 &lt;td&gt;Google Chrome&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;gc&lt;/td&gt;
 &lt;td&gt;Google Chrome&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;chrome&lt;/td&gt;
 &lt;td&gt;Google Chrome&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;opera&lt;/td&gt;
 &lt;td&gt;Opera&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;phantomjs&lt;/td&gt;
 &lt;td&gt;PhantomJS&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;htmlunitwithjs&lt;/td&gt;
 &lt;td&gt;HTMLUnit with Javascipt support&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;safari&lt;/td&gt;
 &lt;td&gt;Safari&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;ipad&lt;/td&gt;
 &lt;td&gt;iPad&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;iphone&lt;/td&gt;
 &lt;td&gt;iPhone&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;android&lt;/td&gt;
 &lt;td&gt;Android&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;htmlunit&lt;/td&gt;
 &lt;td&gt;HTMLUnit&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
 &lt;br&gt;
 Returns the index of the newly created browser instance which can be used
 later to switch back to it. Index starts from 1 and is reset back to it
 when the `Close All Browsers` keyword is used.&lt;br&gt;
 &lt;br&gt;
 &lt;b&gt;DesiredCapabilities&lt;/b&gt;&lt;br&gt;
 The DesiredCapabilities can be specified in a simple key:value format or
 as a JSON object. With the JSON format more complex parameters, like the
 proxy, can be configured.&lt;br&gt;
 &lt;br&gt;
 Example of desiredCapabilities as simple string:&lt;br&gt;
 &lt;table border="1" cellspacing="0" summary=""&gt;
 &lt;tr&gt;
 &lt;td&gt;platform:Windows 8,browserName:firefox,version:25&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
 &lt;br&gt;
 Example of desiredCapabilities as JSON object:&lt;br&gt;
 &lt;table border="1" cellspacing="0" summary=""&gt;
 &lt;tr&gt;
 &lt;td&gt;
 {&lt;br&gt;
 &amp;emsp;"platform":"Windows 8",&lt;br&gt;
 &amp;emsp;"browserName":"firefox",&lt;br&gt;
 &amp;emsp;"version":"25",&lt;br&gt;
 &amp;emsp;"proxy":&lt;br&gt;
 &amp;emsp;{&lt;br&gt;
 &amp;emsp;&amp;emsp;"proxyType":"manual",&lt;br&gt;
 &amp;emsp;&amp;emsp;"httpProxy":"localhost:8118"&lt;br&gt;
 &amp;emsp;}&lt;br&gt;
 }&lt;br&gt;
 &lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
 &lt;br&gt;
 &lt;b&gt;BrowserOptions&lt;/b&gt;&lt;br&gt;
 The BrowserOptions can be specified as JSON object to set more complex
 browser specific parameters. At the moment only the following browsers
 with the listed options are implemented.&lt;br&gt;
 &lt;br&gt;
 Firefox:
 &lt;table border="1" cellspacing="0" summary=""&gt;
 &lt;tr&gt;
 &lt;td&gt;
 {&lt;br&gt;
 &amp;emsp;"preferences":&lt;br&gt;
 &amp;emsp;{&lt;br&gt;
 &amp;emsp;&amp;emsp;"extensions.firebug.currentVersion":"1.8.1",&lt;br&gt;
 &amp;emsp;&amp;emsp;"extensions.firebug.addonBarOpened":true,&lt;br&gt;
 &amp;emsp;&amp;emsp;"extensions.firebug.enableSites":true&lt;br&gt;
 &amp;emsp;}&lt;br&gt;
 &amp;emsp;"extensions":&lt;br&gt;
 &amp;emsp;[&lt;br&gt;
 &amp;emsp;&amp;emsp;"firebug-1.8.1.xpi",&lt;br&gt;
 &amp;emsp;&amp;emsp;"modify_headers-0.7.1.1-fx.xpi"&lt;br&gt;
 &amp;emsp;]&lt;br&gt;
 }&lt;br&gt;
 &lt;/td&gt;
 &lt;/tr&gt;
 &lt;/table&gt;
 &lt;br&gt;
 &lt;b&gt;Internet Explorer&lt;/b&gt;&lt;br&gt;
 Note, that you will encounter strange behavior, if you open multiple
 Internet Explorer browser instances. That is also why `Switch Browser`
 only works with one IE browser at most. For more information see: &lt;a
 href=
 "http://selenium-grid.seleniumhq.org/faq.html#i_get_some_strange_errors_when_i_run_multiple_internet_explorer_instances_on_the_same_machine"
 &gt;Strange errors with multiple IE instances&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Parameters:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;url&lt;/b&gt;&amp;nbsp;The URL to open in the newly created browser instance.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;browserName&lt;/b&gt;&amp;nbsp;Default=firefox. Optional name of the browser to start.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;alias&lt;/b&gt;&amp;nbsp;Default=NONE. Optional alias for the newly created browser
            instance. The alias can be used later for switching between
            browsers instances, just as returned index.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;remoteUrl&lt;/b&gt;&amp;nbsp;Default=False. Optional remote grid URL. When specified no
            local WebDriver instance is created, but a network connection
            to a Selenium 2 WebDriver Grid Hub at the given URL is opened.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;desiredCapabilities&lt;/b&gt;&amp;nbsp;Default=NONE. Optional desired capabilities of the newly
            created remote browser instances can be specified in a simple
            key1:val1,key2:val2 format or as a JSON object (see examples
            above). Used to communicate to the remote grid, which kind of
            browser, etc. should be used. For more information see: &lt;a
            href=
            "http://code.google.com/p/selenium/wiki/DesiredCapabilities"
            &gt;DesiredCapabilities&lt;/a&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;browserOptions&lt;/b&gt;&amp;nbsp;Default=NONE. Extended browser options as JSON structure.&lt;br&gt;&lt;br&gt;&lt;b&gt;Returns:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The index of the newly created browser instance.&lt;br&gt;&lt;br&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;`Close All Browsers`&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;`Close Browser`&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;`Switch Browser`&lt;br&gt;</doc>
<arguments>
<arg>${Application_URL}</arg>
<arg>${Browser_Name}</arg>
</arguments>
<msg level="INFO" timestamp="20190201 14:33:33.702">browserName: Chrome</msg>
<msg level="INFO" timestamp="20190201 14:33:33.708">Opening browser 'Chrome' to base url 'http://www.thetestingworld.com/testings'</msg>
<msg level="INFO" timestamp="20190201 14:33:40.132">Starting ChromeDriver 2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5) on port 16298
Only local connections are allowed.</msg>
<status endtime="20190201 14:33:40.134" starttime="20190201 14:33:33.680" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Maximize Browser Window">
<doc>Maximizes current browser window.&lt;br&gt;</doc>
<status endtime="20190201 14:33:41.521" starttime="20190201 14:33:40.144" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Input Text">
<doc>Types the given &lt;b&gt;text&lt;/b&gt; into the text field identified by
 &lt;b&gt;locator&lt;/b&gt;.&lt;br&gt;
 &lt;br&gt;
 Key attributes for input fields are id and name. See `Introduction` for
 details about locators.&lt;br&gt;&lt;br&gt;&lt;b&gt;Parameters:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;locator&lt;/b&gt;&amp;nbsp;The locator to locate the text field.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;text&lt;/b&gt;&amp;nbsp;The password to input&lt;br&gt;</doc>
<arguments>
<arg>name=fld_username</arg>
<arg>Helloworld</arg>
</arguments>
<msg level="INFO" timestamp="20190201 14:33:41.532">Typing text 'Helloworld' into text field 'name=fld_username'</msg>
<status endtime="20190201 14:33:41.961" starttime="20190201 14:33:41.524" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Input Text">
<doc>Types the given &lt;b&gt;text&lt;/b&gt; into the text field identified by
 &lt;b&gt;locator&lt;/b&gt;.&lt;br&gt;
 &lt;br&gt;
 Key attributes for input fields are id and name. See `Introduction` for
 details about locators.&lt;br&gt;&lt;br&gt;&lt;b&gt;Parameters:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;locator&lt;/b&gt;&amp;nbsp;The locator to locate the text field.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;text&lt;/b&gt;&amp;nbsp;The password to input&lt;br&gt;</doc>
<arguments>
<arg>xpath=//input[@name='fld_email']</arg>
<arg>abcd@yahoo.com</arg>
</arguments>
<msg level="INFO" timestamp="20190201 14:33:41.973">Typing text 'abcd@yahoo.com' into text field 'xpath=//input[@name='fld_email']'</msg>
<status endtime="20190201 14:33:42.477" starttime="20190201 14:33:41.964" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Input Text">
<doc>Types the given &lt;b&gt;text&lt;/b&gt; into the text field identified by
 &lt;b&gt;locator&lt;/b&gt;.&lt;br&gt;
 &lt;br&gt;
 Key attributes for input fields are id and name. See `Introduction` for
 details about locators.&lt;br&gt;&lt;br&gt;&lt;b&gt;Parameters:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;locator&lt;/b&gt;&amp;nbsp;The locator to locate the text field.&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;text&lt;/b&gt;&amp;nbsp;The password to input&lt;br&gt;</doc>
<arguments>
<arg>name=fld_username</arg>
<arg>abcdxyz</arg>
</arguments>
<msg level="INFO" timestamp="20190201 14:33:42.488">Typing text 'abcdxyz' into text field 'name=fld_username'</msg>
<status endtime="20190201 14:33:42.892" starttime="20190201 14:33:42.479" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Clear Element Text">
<doc>Clears the text from element identified by &lt;b&gt;locator&lt;/b&gt;.&lt;br&gt;
 &lt;br&gt;
 This keyword does not execute any checks on whether or not the clear
 method has succeeded, so if any subsequent checks are needed, they should
 be executed using method `Element Text Should Be`.&lt;br&gt;
 &lt;br&gt;
 Also, this method will use WebDriver's internal _element.clear()_ method,
 i.e. it will not send any keypresses, and it will not have any effect
 whatsoever on elements other than input textfields or input textareas.
 Clients relying on keypresses should implement their own methods.&lt;br&gt;
 &lt;br&gt;
 Key attributes for arbitrary elements are id and name. See `Introduction`
 for details about locators.&lt;br&gt;&lt;br&gt;&lt;b&gt;Parameters:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;locator&lt;/b&gt;&amp;nbsp;The locator to locate the element.&lt;br&gt;</doc>
<arguments>
<arg>xpath=//input[@name='fld_email']</arg>
</arguments>
<status endtime="20190201 14:33:42.960" starttime="20190201 14:33:42.894" status="PASS"></status>
</kw>
<kw library="Selenium2Library" name="Click Button">
<doc>Click on the button identified by &lt;b&gt;locator&lt;/b&gt;.&lt;br&gt;
 &lt;br&gt;
 Key attributes for buttons are id, name and value. See `Introduction` for
 details about locators.&lt;br&gt;&lt;br&gt;&lt;b&gt;Parameters:&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b&gt;locator&lt;/b&gt;&amp;nbsp;The locator to locate the link.&lt;br&gt;</doc>
<arguments>
<arg>xpath=//input[@type='submit']</arg>
</arguments>
<msg level="INFO" timestamp="20190201 14:33:42.970">Clicking button 'xpath=//input[@type='submit']'.</msg>
<status endtime="20190201 14:33:43.152" starttime="20190201 14:33:42.962" status="PASS"></status>
</kw>
<status critical="yes" endtime="20190201 14:33:43.155" starttime="20190201 14:33:33.647" status="PASS"></status>
</test>
<status endtime="20190201 14:33:43.161" starttime="20190201 14:33:33.432" status="PASS"></status>
</suite>
<status endtime="20190201 14:33:43.182" starttime="20190201 14:33:16.417" status="PASS"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" name="Acceptance" id="s1">Acceptance</stat>
<stat pass="1" fail="0" name="TC 001 LoginLogout" id="s1-s1">Acceptance.TC 001 LoginLogout</stat>
<stat pass="1" fail="0" name="TC 002 Signin" id="s1-s2">Acceptance.TC 002 Signin</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
